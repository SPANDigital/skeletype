// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as React from "react";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Caml_builtin_exceptions from "bs-platform/lib/es6/caml_builtin_exceptions.js";
import * as Undead_deadGif from "../../../assets/undead/undead_dead.gif";
import * as Undead_walkGif from "../../../assets/undead/undead_walk.gif";
import * as Undead_deathGif from "../../../assets/undead/undead_death.gif";
import * as Undead_attackGif from "../../../assets/undead/undead_attack.gif";

function statusToString(status) {
  switch (status) {
    case 0 : 
        return "Walking";
    case 1 : 
        return "Attacking";
    case 2 : 
        return "Dying";
    case 3 : 
        return "Dead";
    
  }
}

var rowComponent = ReasonReact.statelessComponent("Skeleton");

function make(time, startTime, stopTime, lane, status, _) {
  return /* record */[
          /* debugName */rowComponent[/* debugName */0],
          /* reactClassInternal */rowComponent[/* reactClassInternal */1],
          /* handedOffState */rowComponent[/* handedOffState */2],
          /* willReceiveProps */rowComponent[/* willReceiveProps */3],
          /* didMount */rowComponent[/* didMount */4],
          /* didUpdate */rowComponent[/* didUpdate */5],
          /* willUnmount */rowComponent[/* willUnmount */6],
          /* willUpdate */rowComponent[/* willUpdate */7],
          /* shouldUpdate */rowComponent[/* shouldUpdate */8],
          /* render */(function () {
              var progress = time - startTime | 0;
              var timeString = [String((progress << 1)) + "px"];
              var determineGif = function (status) {
                switch (status) {
                  case 0 : 
                      return "url(" + (String(Undead_walkGif) + ")");
                  case 1 : 
                      return "url(" + (String(Undead_attackGif) + ")");
                  case 2 : 
                      return "url(" + (String(Undead_deathGif) + ")");
                  case 3 : 
                      return "url(" + (String(Undead_deadGif) + ")");
                  
                }
              };
              var switcher = lane - 1 | 0;
              var positionFromTop;
              if (switcher > 2 || switcher < 0) {
                throw [
                      Caml_builtin_exceptions.match_failure,
                      [
                        "Skeleton.re",
                        42,
                        6
                      ]
                    ];
              } else {
                switch (switcher) {
                  case 0 : 
                      positionFromTop = "16%";
                      break;
                  case 1 : 
                      positionFromTop = "44%";
                      break;
                  case 2 : 
                      positionFromTop = "72%";
                      break;
                  
                }
              }
              if (status === /* Dying */2 || status === /* Dead */3 || status === /* Attacking */1) {
                timeString[0] = String((stopTime << 1)) + "px";
              }
              return React.createElement("div", {
                          className: Cn.make(/* :: */[
                                "skeleton",
                                /* :: */[
                                  Cn.ifTrue(status === /* Dying */2, "dying"),
                                  /* :: */[
                                    Cn.ifTrue(status === /* Dead */3, "dead"),
                                    /* [] */0
                                  ]
                                ]
                              ]),
                          style: {
                            backgroundImage: determineGif(status),
                            top: positionFromTop,
                            transform: "translateX(" + (String(timeString) + ")")
                          }
                        });
            }),
          /* initialState */rowComponent[/* initialState */10],
          /* retainedProps */rowComponent[/* retainedProps */11],
          /* reducer */rowComponent[/* reducer */12],
          /* subscriptions */rowComponent[/* subscriptions */13],
          /* jsElementWrapped */rowComponent[/* jsElementWrapped */14]
        ];
}

export {
  statusToString ,
  rowComponent ,
  make ,
  
}
/* rowComponent Not a pure module */

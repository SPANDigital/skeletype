// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as ListLabels from "bs-platform/lib/es6/listLabels.js";
import * as ArrayLabels from "bs-platform/lib/es6/arrayLabels.js";

function range(start, end_) {
  if (start >= end_) {
    return /* [] */0;
  } else {
    return /* :: */[
            start,
            range(start + 1 | 0, end_)
          ];
  }
}

function filter(f, arr) {
  return ArrayLabels.of_list(ListLabels.filter(f)(ArrayLabels.to_list(arr)));
}

function find(f, arr) {
  return ListLabels.find(f, ArrayLabels.to_list(arr));
}

function fill(element, length) {
  if (length <= 0) {
    return /* [] */0;
  } else {
    return /* :: */[
            element,
            fill(element, length - 1 | 0)
          ];
  }
}

function contains(value, theArray) {
  var f = function (found, elem) {
    if (found) {
      return true;
    } else {
      return Caml_obj.caml_equal(elem, value);
    }
  };
  return ArrayLabels.fold_left(f, false, theArray);
}

function getElementAt(_index, _l) {
  while(true) {
    var l = _l;
    var index = _index;
    if (l) {
      if (index <= 0) {
        return /* Some */[l[0]];
      } else {
        _l = l[1];
        _index = index - 1 | 0;
        continue ;
      }
    } else {
      return /* None */0;
    }
  };
}

export {
  range ,
  filter ,
  find ,
  fill ,
  contains ,
  getElementAt ,
  
}
/* No side effect */
